<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.merrycodes.mapper.TagsMapper">

    <resultMap id="mapper" type="com.merrycodes.vo.TagsVo">
        <id column="tagsId" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <collection property="articleList" ofType="com.merrycodes.entity.Article">
            <id column="articleId" property="id" jdbcType="INTEGER"/>
            <result column="title" property="title" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!-- 使用find_in_set(b.name, a.tags)也可以，网上查看效率都差不多（没有足够多的数据测试） -->
    <select id="selectTagsPageWithCont" resultType="com.merrycodes.entity.Tags" parameterType="java.util.Map">
        SELECT a.id, a.name, a.status, count(b.id) AS count, a.create_time, a.update_time
        FROM tags a
        LEFT JOIN article b ON locate(a.name, b.tags)
        <where>
            <if test="staus != null">
                AND a.status = #{staus}
            </if>
            <if test="name != null">
                AND LOCATE(#{name},a.name)
            </if>
        </where>
        GROUP BY a.name
        ${ew.customSqlSegment}
        <if test="countSort != null">
            <choose>
                <when test="countSort == 'asc'">
                    ORDER BY count
                </when>
                <otherwise>
                    ORDER BY count DESC
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="selectTagsWithArticle" resultMap="mapper">
        SELECT a.id as tagsId, a.name, b.id as articleId, b.title
        FROM tags a
                 right join article b on LOCATE(a.name, b.tags) and b.status = 1
    </select>
</mapper>